name: 02_DEVExport
# Export solution from DEV environment

on:
  workflow_dispatch:
  workflow_call:
    inputs: 
      SOLUTION_NAME:
        description: 'The solution name.'
        type: string
        required: true
      DEV_ENVIRONMENT_URL:
        description: 'The DEV environment url.'
        type: string
        required: true
      DEV_CLIENT_ID:
        description: 'The DEV environment client id.'
        type: string
        required: true
      DEV_TENANT_ID:
        description: 'The DEV environment tenant id.'
        type: string
        required: true 
    secrets:
      DEVSECRET:
        description: 'The DEV Secret'
        required: true

permissions:
  contents: write
jobs:
  export-from-dev:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: Install PAC
      if: github.event_name == 'release'
      uses: microsoft/powerplatform-actions/actions-install@v1.1.0

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v1.0.0
      with:
        environment-url: ${{inputs.DEV_ENVIRONMENT_URL}}
        app-id: ${{inputs.DEV_CLIENT_ID}}
        client-secret: ${{ secrets.DEVSECRET }}
        tenant-id: ${{inputs.DEV_TENANT_ID}}
    
    - name: Power Platform Set Online Solution Version
      if: github.event_name == 'release'
      uses: microsoft/powerplatform-actions/set-online-solution-version@v1.1.0
      with:
        environment-url: ${{inputs.DEV_ENVIRONMENT_URL}}
        app-id: ${{inputs.DEV_CLIENT_ID}}
        client-secret: ${{ secrets.DEVSECRET }}
        tenant-id: ${{inputs.DEV_TENANT_ID}}
        name: PocketInvest
        version: ${{github.event.release.tag_name}}
        
    - name: export-solution action
      uses: microsoft/powerplatform-actions/export-solution@v1.4.0
      with:
        environment-url: ${{inputs.DEV_ENVIRONMENT_URL}}
        app-id: ${{inputs.DEV_CLIENT_ID}}
        client-secret: ${{ secrets.DEVSECRET }}
        tenant-id: ${{inputs.DEV_TENANT_ID}}
        solution-name: ${{ inputs.SOLUTION_NAME }}
        solution-output-file: out/exported/${{ inputs.SOLUTION_NAME }}.zip

    - name: check-solution action
      uses: microsoft/powerplatform-actions/check-solution@v1.4.0
      with:
        environment-url: ${{inputs.DEV_ENVIRONMENT_URL}}
        app-id: ${{inputs.DEV_CLIENT_ID}}
        client-secret: ${{ secrets.DEVSECRET }}
        tenant-id: ${{inputs.DEV_TENANT_ID}}
        path: out/exported/${{ inputs.SOLUTION_NAME }}.zip

    - name: unpack-solution action
      if: ${{ success() }}
      uses: microsoft/powerplatform-actions/unpack-solution@v1.4.0
      with:
        solution-file: out/exported/${{ inputs.SOLUTION_NAME }}.zip
        solution-folder: ${{ inputs.SOLUTION_NAME }}
        solution-type: 'Unmanaged'
        overwrite-files: true

    - name: Git Fetch and Commit 
      run: |
        Remove-Item -Path "out/exported/${{ inputs.SOLUTION_NAME }}.zip" -Recurse -Force
        git fetch --all  
        git config --global user.email "no-reply@github.com"
        git config --global user.name "GitHub Actions"
        git checkout main
        git add --all 
        git commit -m "Updates from the dev environment"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git push
